{"version":3,"sources":["Actions/sessions.js","Assets/movie_college.webp","Static/Home.js","Navigation/Navbar.js","Sessions/Login/Login.js","Sessions/Signup/Signup.js","User/User.js","Movies/MovieCard.js","Movies/MovieContainer.js","Movies/AddMovie.js","Movies/CommentCard.js","Movies/MovieDetails.js","Movies/CommentDetails.js","Movies/CommentEdit.js","Static/About.js","Errors/PageNotFound.js","App.js","reportWebVitals.js","Reducers/errorReducer.js","Reducers/requestingReducer.js","Reducers/sessionsReducer.js","Reducers/index.js","index.js"],"names":["signup","details","navigate","dispatch","a","type","fetch","method","headers","Accept","body","JSON","stringify","resp","json","data","ok","payload","errors","login","Home","className","src","HomeImage","alt","Navbar","currentUser","useSelector","state","sessions","updateUser","useNavigate","useDispatch","console","log","name","to","id","onClick","e","preventDefault","then","catch","err","error","logout","Login","onLogin","useState","setErrors","email","password","formData","setFormData","handleChange","target","value","onSubmit","onChange","Signup","Object","entries","map","i","User","user","setUser","loading","setLoading","setUsers","useParams","useEffect","res","current","filter","deleteUser","MovieCard","movie","likes","setLikes","title","image","isLiked","setIsLiked","likeCount","setLikeCount","like","movie_id","length","foundLike","find","user_id","likeObj","r","saveLike","MovieContainer","movies","AddMovie","onMovieAdded","genre","description","ongoing","rows","cols","CommentCard","comment","content","MovieDetail","setMovie","comments","setComments","addComment","params","movieId","CommentDetails","deleteComment","setComment","commentId","CommentEdit","updateComment","style","color","toUpperCase","About","PageNotFound","App","setMovies","setNewMovie","fetchMovies","fetchLikes","path","element","addNewMovie","newMovie","updatedComment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errorsReducer","action","newErrors","assign","push","requestingReducer","sessionsReducer","combineReducers","errorReducer","requesting","store","createImmutableStateInvariantMiddleware","configureStore","reducer","rootReducer","middleware","thunk","getDefaultMiddleware","window","$store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d769cbad.chunk.js","sourcesContent":["export const signup = (details, navigate) => {\n  return async (dispatch) => {\n    dispatch({ type: \"REQUESTING\" });\n\n    const resp = await fetch(\"/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(details),\n    });\n\n    const data = await resp.json();\n    if (!resp.ok) {\n      dispatch({ type: \"ERRORS\", payload: data.errors });\n    } else {\n      // console.log(data)\n      dispatch({ type: \"CLEAR_ERRORS\" });\n      dispatch({ type: \"LOGIN\", payload: data });\n      navigate(\"/\");\n    }\n    dispatch({ type: \"DONE_REQUESTING\" });\n\n    return data;\n  };\n};\n\nexport const login = (details, navigate) => {\n  return async (dispatch) => {\n    dispatch({ type: \"REQUESTING\" });\n    const resp = await fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(details),\n    });\n\n    const data = await resp.json();\n\n    if (!resp.ok) {\n      dispatch({ type: \"ERRORS\", payload: data.errors });\n    } else {\n      // console.log(data)\n      dispatch({ type: \"CLEAR_ERRORS\" });\n      dispatch({ type: \"LOGIN\", payload: data });\n      navigate(\"/\");\n    }\n    dispatch({ type: \"DONE_REQUESTING\" });\n\n    return data;\n  };\n};\n\nexport const getCurrentUser = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"REQUESTING\" });\n    const resp = await fetch(\"/authorized_user\", {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(async (resp) => {\n        const data = await resp.json();\n        if (resp.ok) {\n          dispatch({ type: \"LOGIN\", payload: data });\n        } else {\n          dispatch({ type: \"LOGOUT\" });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    // const data = await resp.json();\n    // const payload = {\n    //   user: data.user,\n    // }\n\n    // if(data.user) {\n    //   dispatch({ type: \"LOGIN\", payload })\n    // }\n    dispatch({ type: \"DONE_REQUESTING\" });\n  };\n};\n\nexport const logout = (navigate) => {\n  return async (dispatch) => {\n    dispatch({ type: \"REQUESTING\" });\n    const resp = await fetch(\"/logout\", {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(async (resp) => {\n        dispatch({ type: \"LOGOUT\" });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    // const data = await resp.json();\n    // const payload = {\n    //   user: data.user,\n    // }\n\n    // if(data.user) {\n    //   dispatch({ type: \"LOGIN\", payload })\n    // }\n    dispatch({ type: \"DONE_REQUESTING\" });\n    navigate(\"/\");\n  };\n  // return {\n  //   type: \"LOGOUT\"\n  // };\n};\n","export default __webpack_public_path__ + \"static/media/movie_college.0a2698a0.webp\";","import '../Static/Home.css';\nimport HomeImage from '../Assets/movie_college.webp'\n\n\nconst Home = () =>{\n\n    return(\n    <div>\n        <div className=\"overlay\"></div>\n        <h1 className=\"headline\"> Be Kind <br/> Rewind</h1>\n        <img src={HomeImage} alt={HomeImage} />\n    </div>\n    )\n}\n\nexport default Home","import React from \"react\";\nimport {NavLink, useNavigate} from 'react-router-dom';\nimport '../Navigation/Navbar.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../Actions/sessions';\n\n\n\nconst Navbar = () => {\n\n  const currentUser = useSelector(state => state.sessions.currentUser)\n  const updateUser = useSelector(state => state.sessions.updateUser)\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n\n  const handleLogOut = e => {\n    e.preventDefault();\n\n    dispatch(logout(navigate))\n    \n    console.log('logged out')\n\n  }\n\n  // const handleLogOut = () => {\n  //   fetch('/logout',{\n  //     method: \"DELETE\"\n  //   })\n  //   updateUser(\"\")\n  //       navigate(\"/\")\n  // }\n\n\nconsole.log('updateUser', updateUser)\nconsole.log('currentUser', currentUser)\n\n  if( updateUser ) {\n  return (\n    <div className=\"navBar\">\n          <ul>\n            <h4 className='user-name'> {currentUser.name} </h4>\n            <li><NavLink to=\"/\" id=\"logo\" className=\"active-link\" >Welcome </NavLink></li>\n            <li><NavLink to=\"/movies\" > Show All Movies</NavLink></li>\n            <li><NavLink to=\"/about\" > About</NavLink></li>\n            <button  className='logout-button' onClick={handleLogOut}>Log Out</button>          \n          </ul>\n    </div>\n    )\n  }\n\n\n  return (\n    <div className=\"navBar\">\n        <ul>\n          <li><NavLink to=\"/\" id=\"logo\" className=\"active-link\" >Welcome</NavLink></li>\n\n          <li><NavLink to='/signup' className=\"active-link\">Sign Up</NavLink></li>\n          <li><NavLink to='/login' className=\"active-link\">Login</NavLink></li>\n        </ul>\n    </div>\n  )\n}\n\nexport default Navbar\n\n","import React, { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport \"../Form.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../Actions/sessions\";\nimport Errors from \"../../Errors/Errors\";\n\nconst Login = ({ onLogin }) => {\n  const [errors, setErrors] = useState();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { name, password } = formData;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const data = await dispatch(login(formData, navigate));\n    if (data.errors) {\n      setErrors(data.errors);\n    } else {\n      onLogin();\n      navigate(\"/\");\n    }\n  };\n\n  // const onSubmit = (e) =>{\n  //     e.preventDefault()\n  //     const user = {\n  //         name,\n  //         password\n  //     }\n  //     fetch(`/login`,{\n  //         method:'POST',\n  //         headers:{'Content-Type': 'application/json'},\n  //         body:JSON.stringify(user)\n  //     })\n  //     .then(res => {\n  //         if(res.ok){\n  //             res.json().then(user => {\n  //                 updateUser(user)\n  //                 navigate('/movies')\n  //             })\n  //         }else {\n  //             res.json().then(json => setErrors(json.errors))\n  //         }\n  //     })\n\n  // }\n  return (\n    <>\n      <h2>Login</h2>\n      <form className=\"form-container\" onSubmit={onSubmit}>\n        <label> Name </label>\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n\n        <label> Password </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n\n        <input type=\"submit\" value=\"Log in!\" />\n        <div>{errors}</div>\n        <h3>\n          <NavLink className=\"link\" to=\"/signup\">\n            Don't have an account yet?\n          </NavLink>\n        </h3>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport \"../Form.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup } from \"../../Actions/sessions\";\n\nconst Signup = ({ onLogin }) => {\n  // const errors = useSelector((state) => state.errors);\n  const [errors, setErrors] = useState();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { name, email, password } = formData;\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const data = await dispatch(signup(formData, navigate));\n    if (data.errors) {\n      setErrors(data.errors);\n    } else {\n      onLogin();\n      navigate(\"/\");\n    }\n  };\n\n  // const onSubmit = (e) =>{\n  //     e.preventDefault()\n  //     const user = {\n  //         name,\n  //         email,\n  //         password,\n  //     }\n\n  //     fetch(`/users`,{\n  //         method:'POST',\n  //         headers:{'Content-Type': 'application/json'},\n  //         body:JSON.stringify(user)\n  //     })\n  //     .then(res => {\n  //         if(res.ok){\n  //             res.json().then(user => {\n  //                 navigate('/movies')\n  //             })\n  //         }else {\n  //             res.json().then(json => setErrors(Object.entries(json.errors)))\n  //         }\n  //     })\n\n  // }\n\n  return (\n    <>\n      <h2>Create an Account</h2>\n      <form className=\"form-container\" onSubmit={onSubmit}>\n        <label> Name </label>\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n\n        <label> Email </label>\n        <input type=\"text\" name=\"email\" value={email} onChange={handleChange} />\n\n        <label> Password </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n\n        <input type=\"submit\" value=\"Sign up!\" />\n        <div>\n          {/* errors = { name: [\"cannot be blank\", \"is too short\"], email: [\"cannot be blank\"] }\n            Object.entries(errors) => \n            [[\"name\", [\"cannot be blank\", \"is too short\"]], [\"email\", [\"cannot be blank\"]]]\n         */}\n          {errors\n            ? Object.entries(errors).map((error, i) => (\n                <div key={i}> {`${error[0]}: ${error[1]}`} </div>\n              ))\n            : null}\n        </div>\n\n        <h3>\n          <NavLink className=\"link\" to=\"/login\">\n            Already have an account?\n          </NavLink>\n        </h3>\n      </form>\n    </>\n  );\n};\n\nexport default Signup;\n","import { useEffect, useState } from 'react'\nimport {useParams, useNavigate} from 'react-router-dom'\n\nconst User = () => {\n    const [user, setUser] = useState()\n    const [loading, setLoading] = useState(true)\n    const [errors, setErrors] = useState(false)\n    const [users, setUsers] = useState([])\n\n    const navigate = useNavigate()\n\n    \n    const params = useParams()\n    const {id} = params\n\n    useEffect(()=>{\n        fetch(`/users/${id}`)\n        .then(res => {\n            if(res.ok){\n                res.json().then(user => {\n                    setUser(user)\n                    setLoading(false)\n                })\n            }else {\n                res.json().then(data => setErrors(data.error))\n            }\n        })\n    },[true])\n\n    if(loading) return <h1>Loading</h1>\n    if(errors) return <h1>{errors}</h1>\n\n    const deleteUser = (id) => setUsers(current => current.filter(user => user.id !== id))\n\n\n    const handleDelete = () => {\n        fetch(`/users/${user.id}`,{\n          method:'DELETE',\n          headers: {'Content-Type': 'application/json'}\n        })\n        .then(res => {\n          if(res.ok){\n            deleteUser(id)\n            navigate('/')\n          }\n        })\n      }\n    \n\n    return (\n    <div>\n        <h2>{user.name}</h2>\n                <div className='grid-container'>\n                </div>\n            <button onClick={handleDelete}>Delete Account</button>\n    </div>\n    )\n}\n\nexport default User","import React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../Movies/MovieCard.css\";\nimport { useState } from \"react\";\n\nconst MovieCard = ({ movie, likes, setLikes, user }) => {\n  const { title, image, id } = movie;\n  const [isLiked, setIsLiked] = useState(false);\n  const [likeCount, setLikeCount] = useState();\n\n  useEffect(() => {\n    if (!likes && !movie) return;\n\n    setLikeCount(likes.filter((like) => like.movie_id === movie.id).length);\n  }, [likes, movie]);\n\n  useEffect(() => {\n    if (!likes) return;\n    const foundLike = likes.find(\n      (like) => like.user_id === user.id && like.movie_id === movie.id\n    );\n    setIsLiked(!!foundLike);\n  }, [likes]);\n\n  console.log(user);\n\n  const createMovie = () => {\n    const movieObj = {\n      title: movie.title,\n      description: movie.description,\n      genre: movie.genre,\n      image: movie.image,\n      user_id: user.id,\n    };\n\n    fetch(\"/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(movieObj),\n    }).then((r) => r.json());\n  };\n\n  const onClick = (e) => {\n    e.preventDefault();\n    if (isLiked) return;\n\n    const saveLike = () => {\n      const likeObj = {\n        movie_id: movie.id,\n        user_id: user.id,\n      };\n\n      console.log(likeObj);\n\n      fetch(\"/likes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(likeObj),\n      })\n        .then((r) => r.json())\n        .then(() => {\n          setLikeCount((likeCount) => likeCount + 1);\n        });\n    };\n\n    saveLike();\n    setIsLiked(!isLiked);\n  };\n\n  return (\n    <div>\n      <div className=\"card\">\n        <NavLink to={`/movies/${id}`}>\n          <img src={image} className=\"movie-img\" alt=\"movie-img\" />{\" \"}\n          <h2 className=\"movie-title\">{title}</h2>{\" \"}\n        </NavLink>\n\n        <button className=\"like-button\" onClick={onClick}>\n          {\" \"}\n          <h5>{likeCount}</h5>\n          {isLiked ? \"Liked\" : \"Like 👍\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport MovieCard from '../Movies/MovieCard'\nimport '../Movies/MovieCard.css'\n\n\nconst MovieContainer = ({movies, likes, setLikes }) => {\n  const currentUser = useSelector(state => state.sessions.currentUser)\n\n  return (\n    <div>\n      <h2>The Iconic Movies You Loved</h2>\n\n      <NavLink to={\"/movie/new\"}> <button className='add-movie'> add new movie </button> </NavLink>\n\n\n        <div className='grid-container'>\n            {movies?.map((movie) => (\n              <MovieCard  key={movie.id} movie={movie} user={currentUser} likes={likes} setLikes={setLikes} />\n              ))}\n        </div>\n</div>\n  )\n}\n\nexport default MovieContainer","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddMovie = ({ onMovieAdded }) => {\n  const navigate = useNavigate();\n\n  const [errors, setErrors] = useState([]);\n\n  const [formData, setFormData] = useState({\n    title: \"\",\n    genre: \"\",\n    description: \"\",\n    image: \"\",\n  });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    fetch(\"/movies\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...formData, ongoing: true }),\n    }).then((res) => {\n      if (res.ok) {\n        onMovieAdded();\n        navigate(\"/movies\");\n      } else {\n        res.json().then((data) => {\n          setErrors(Object.entries(data.errors));\n        });\n      }\n    });\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Add New Movie </h2>\n      <h3>\n        {errors\n          ? errors.map((e) => (\n              <div>\n                {e[0]} {e[1]}\n              </div>\n            ))\n          : null}\n      </h3>\n      <form className=\"form-container\" onSubmit={onSubmit}>\n        <label> Movie Title: </label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={formData.title}\n          onChange={handleChange}\n        />\n        <label> Movie Genre: </label>\n        <input\n          type=\"text\"\n          name=\"genre\"\n          value={formData.genre}\n          onChange={handleChange}\n        />\n        <label> Description: </label>\n        <textarea\n          type=\"text\"\n          rows=\"4\"\n          cols=\"50\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n        />\n        <label> Image: </label>\n        <input\n          type=\"text\"\n          name=\"image\"\n          value={formData.image}\n          onChange={handleChange}\n        />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddMovie;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../Movies/CommentCard.css\";\n\nconst CommentCard = ({ comment, movie }) => {\n  const currentUser = useSelector((state) => state.sessions.currentUser);\n  const { id } = comment;\n\n  return (\n    <div>\n      <div className=\"comment-card\">\n        <div className=\"card-top\">\n          {comment.user_id === currentUser.id ? (\n            <NavLink to={`/movies/${movie.id}/comments/${id}`}>\n              <h4 className=\"edit-link\">edit</h4>\n            </NavLink>\n          ) : null}\n        </div>\n        <p className=\"comment\">{comment.content}</p>\n        <p className=\"m-0 text-start p-1\"> by {comment.user.name} </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentCard;\n","import  { useParams } from 'react-router-dom'\nimport {useEffect, useState} from 'react'\nimport './MovieDetails.css'\nimport '../Sessions/Form.css'\nimport '../Movies/CommentCard.css'\nimport CommentCard from './CommentCard'\n\n\n\nconst MovieDetail = () => {\n\n\n  const [movie, setMovie] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [errors, setErrors] = useState(false)\n  const [comments, setComments] = useState([])\n\n  const addComment = (comment) =>\n    setComments((current) => [...current, comment]);\n  \n  const params = useParams()\n\n  const [formData, setFormData] = useState({\n      content:''\n  })\n  \n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFormData({ ...formData, [name]: value })\n  }\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch(`/movies/${params.movieId}/comments`,{\n        method:'POST',\n        headers: {'Content-Type': 'application/json'},\n        body:JSON.stringify({...formData, ongoing: true, movie_id: movie.id})\n    }).then(res => {\n        if(res.ok){\n        res.json().then(addComment)\n        setFormData ({\n          content:''\n        })\n        } else {\n        res.json().then(data => {\n            setErrors(Object.entries(data.errors))\n            console.log('error', errors)\n\n        })\n        }\n    })\n    }\n\n\n  useEffect(()=>{\n    fetch(`/movies/${params.movieId}`)\n    .then(res => { \n      if(res.ok){\n        res.json().then(data => {\n          setMovie(data)\n          setLoading(false)\n        })\n      } else {\n        // console.log('error')\n        res.json().then(data => setErrors(data.error))\n      }\n    })\n    fetch(`/movies/${params.movieId}/comments`).then((res) => {\n      if (res.ok) {\n        res.json().then(data => setComments(data));\n      } else {\n        res.json().then((data) => setErrors(data.error));\n      }\n    });\n  },[])\n\n\n\nconsole.log(comments)\n  \n\n  if(loading) return <h1>Loading</h1>\n  if(errors) return <h1>{errors}</h1>\n\n  const {id, title, genre, image, description} = movie \n\n\n\n\n  return (\n    <div>\n        <div>\n        <img className='movie' src={image} alt=\"movie-img\"/>\n            <h2>{title}</h2>\n            <h3 className='genre'>{genre}</h3>\n            <p>{description}</p>\n        </div>\n\n        <div>\n        <h3>{errors ? errors.map(e => <div>{e[0]} {e[1]}</div>):null}</h3>\n\n          <form className='comments-form-container' onSubmit={handleSubmit}>          \n            <label> Comment </label>\n            <textarea rows={4} cols={40} name='content' value={formData.content} onChange={handleChange}   />\n            <input type='submit' value='Submit' />\n          </form>\n        </div>\n        \n        <div className='comment-grid-container'>\n          {comments?.map((comment) => (\n                <CommentCard  key={comment.id} movie={movie} comment={comment}  />\n                ))}\n        </div>\n    </div>\n    )\n}\n\n\n\nexport default MovieDetail","import { NavLink, useParams, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"../Movies/CommentCard.css\";\n\nconst CommentDetails = ({ deleteComment }) => {\n  const [comment, setComment] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [errors, setErrors] = useState(false);\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(`/comments/${params.commentId}`).then((res) => {\n      if (res.ok) {\n        res.json().then((data) => {\n          setComment(data);\n          setLoading(false);\n        });\n      } else {\n        // console.log(\"error\");\n        res.json().then((data) => setErrors(data.error));\n      }\n    });\n  }, []);\n\n  const handleDelete = () => {\n    fetch(`/comments/${params.commentId}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    }).then((res) => {\n      if (res.ok) {\n        deleteComment(id);\n        navigate(`/movies/${params.movieId}`);\n      } else {\n        res\n          .json()\n          .then((data) =>\n            setErrors(Object.entries(data.errors).map((e) => `${e[0]} ${e[1]}`))\n          );\n      }\n    });\n  };\n\n  if (loading) return <h1>Loading</h1>;\n  if (errors) return <h1>{errors}</h1>;\n\n  const { id, movie_id, content } = comment;\n\n  return (\n    <div className=\"comment-card\">\n      <div className=\"\">\n        <p>{content}</p>\n        <div className=\"text-center\">\n          <NavLink to={`/movies/${movie_id}/comments/${id}/edit`}>\n            {\" \"}\n            <button>Edit</button>{\" \"}\n          </NavLink>\n          <button onClick={handleDelete}>Delete</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentDetails;\n","import React, { useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom';\n\n\n    const CommentEdit = ({updateComment}) => {\n\n    const navigate = useNavigate()\n    const params = useParams();\n\n        \n    const [formData, setFormData] = useState({\n        content:'',\n    })\n    const [errors, setErrors] = useState([])\n    const {id} = useParams()\n    useEffect(() => {\n    fetch(`/comments/${params.commentId}`)\n    .then(res => res.json())\n    .then(setFormData)\n    },[])\n\n    const handleChange = (e) => {\n    const { name, value } = e.target\n    setFormData({ ...formData, [name]: value })\n    }\n\n\n    function onSubmit(e){\n    e.preventDefault()\n    fetch(`/comments/${params.commentId}`,{\n        method:'PATCH',\n        headers: {'Content-Type': 'application/json'},\n        body:JSON.stringify(formData)\n    })\n    .then(res => {\n        if(res.ok){\n        res.json().then(updateComment)\n        navigate(`/movies/${params.movieId}`)\n        } else {\n        res.json().then(data => setErrors(Object.entries(data.errors).map(e => `${e[0]} ${e[1]}`)))\n        }\n    })\n    }\n    return (\n        <div>\n    \n        {errors ? errors.map(e => <div>{e[0]} {e[1]}</div>):null}\n\n        <h2> Edit</h2>\n\n        <form className='comments-form-container' onSubmit={onSubmit}>\n            <label> Comment </label>\n            <textarea name='content' value={formData.content} onChange={handleChange}  />\n            <input type='submit' value='Submit' />\n          </form>\n\n        {errors?errors.map(e => <h2 style={{color:'red'}}>{e.toUpperCase()}</h2>):null}\n        </div>\n\n    )\n    }\n\n    export default CommentEdit","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>About</div>\n  )\n}\n\nexport default About","const PageNotFound = () =>{\n\n    \n    return(\n        <>\n            <h1>Sorry We can't find the Page you're looking for!</h1>\n            <h1>404 Not Found</h1>\n        </>\n    )\n}\nexport default PageNotFound","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"../src/App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentUser } from \"./Actions/sessions\";\n\nimport Home from \"./Static/Home\";\nimport Navbar from \"./Navigation/Navbar\";\nimport Login from \"./Sessions/Login/Login\";\nimport Signup from \"./Sessions/Signup/Signup\";\nimport User from \"./User/User\";\nimport MovieContainer from \"./Movies/MovieContainer\";\nimport AddMovie from \"./Movies/AddMovie\";\nimport MovieDetail from \"./Movies/MovieDetails\";\nimport CommentDetails from \"./Movies/CommentDetails\";\nimport CommentEdit from \"./Movies/CommentEdit\";\nimport About from \"./Static/About\";\nimport PageNotFound from \"./Errors/PageNotFound\";\n\nconst App = () => {\n\n  const currentUser = useSelector(state => state.sessions.currentUser);\n  const dispatch = useDispatch();\n\n  const [errors, setErrors] = useState(false);\n  const [user, setUser] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newMovie, setNewMovie] = useState([]);\n\n\n\n  /**\n   * Called when app first loads.\n   * \n   * Fetches current user (if logged in), movies, and likes. If\n   * user is NOT logged in, current user, movies, and likes will\n   * be empty.\n   */\n  useEffect(() => {\n    dispatch(getCurrentUser());\n    fetchMovies();\n    fetchLikes();\n  }, []);\n\n\n  const fetchMovies = () => {\n    fetch(\"/movies\").then((res) => {\n      if (res.ok) {\n        res.json().then(setMovies);\n      } else {\n        res.json().then((data) => setErrors(data.error));\n      }\n    });\n  };\n\n  const fetchLikes = () => {\n    fetch(\"/likes\").then((res) => {\n      if (res.ok) {\n        res.json().then(setLikes);\n      } else {\n        res.json().then((data) => setErrors(data.error));\n      }\n    });\n  };\n\n  /**\n   * Called right after user logs in on Login page.\n   * \n   * Fetches movies and likes now that user is logged in.\n   */\n  const onLogin = () => { \n    fetchMovies();\n    fetchLikes();\n   }\n\n  const deleteComment = (id) =>\n    setComments((current) => current.filter((comment) => comment.id !== id));\n\n  if (errors) return <h1>{errors}</h1>;\n\n  const updateComment = (updatedComment) =>\n    setComments((current) => {\n      return current.map((comment) => {\n        if (comment.id === updateComment.id) {\n          return updatedComment;\n        } else {\n          return comment;\n        }\n      });\n    });\n\n    const onMovieAdded = () => {\n      fetchMovies();\n    }\n    \n    const addNewMovie = (newMovie) => \n      setNewMovie(current => [...current,newMovie])\n\n\n  return (\n    <div className=\"global-style\">\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<Login onLogin={onLogin} />} />\n          <Route path=\"/signup\" element={<Signup onLogin={onLogin} />} />\n          <Route path=\"/users/:id\" element={<User  />} />\n          <Route\n            path=\"/movies\"\n            element={\n              <MovieContainer\n                movies={movies}\n                likes={likes}\n                setLikes={setLikes}\n                setUser={setUser}\n                addNewMovie={addNewMovie}\n              />\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n\n          <Route\n            path=\"/movies/:movieId\"\n            element={\n              <MovieDetail  comments={comments} />\n            }\n          />\n          <Route\n            path=\"/movies/:movieId/comments/:commentId\"\n            element={\n              <CommentDetails\n                deleteComment={deleteComment} currentUser={currentUser}\n              />\n            }\n          />\n          <Route\n            path=\"/movies/:movieId/comments/:commentId/edit\"\n            element={\n              <CommentEdit updateComment={updateComment} comments={comments} />\n            }\n          />\n\n          <Route path=\"/movie/new\" element={<AddMovie onMovieAdded={onMovieAdded}/>}  />\n\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = []\n\nconst errorsReducer = (state=initialState, action) => {\n  console.log('errorsReducer', state, action);\n  switch(action.type) {\n    case \"ERRORS\":\n      const newErrors = Object.assign([], state);\n      newErrors.push(action.payload);\n      return newErrors;\n    case \"CLEAR_ERRORS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport default errorsReducer;","const initialState = true;\n\nconst requestingReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case \"REQUESTING\":\n      return true;\n    case \"DONE_REQUESTING\":\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport default requestingReducer;\n","const initialState = {\n\n    currentUser: {}, \n    updateUser: false\n\n\n}\n\nconst sessionsReducer = (state=initialState, action) => {\n  // console.log(state, 'state')\n  // console.log(action.type)\n  console.log('Sessions Reducer:', action, state);\n    switch(action.type) {\n      case \"SIGNUP\":\n        return {\n          currentUser: action.payload,\n          updateUser: true\n        }\n      case \"LOGOUT\":\n        return initialState;\n\n       case \"LOGIN\":\n        return {\n          currentUser: action.payload,\n          updateUser: true\n        } \n      default:\n        return state;\n    }\n  }\n\nexport default sessionsReducer;\n","import { combineReducers } from \"redux\";\n\nimport errorReducer from \"./errorReducer\";\nimport requestingReducer from \"./requestingReducer\";\nimport sessionsReducer from \"./sessionsReducer\";\n\n\nexport default combineReducers({\n    errors: errorReducer,\n    requesting: requestingReducer,\n    sessions: sessionsReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport {\n  configureStore,\n  createImmutableStateInvariantMiddleware,\n  getDefaultMiddleware\n} from \"@reduxjs/toolkit\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\nimport loggerMiddleware from './middleware/logger';\nconst immutableInvariantMiddleware = createImmutableStateInvariantMiddleware();\nconst store = configureStore({ reducer: rootReducer, middleware: [thunk, createImmutableStateInvariantMiddleware(),...getDefaultMiddleware()] });\nwindow.$store = store;\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={ store }>\n      <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}